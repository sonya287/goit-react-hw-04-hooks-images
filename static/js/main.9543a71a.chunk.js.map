{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","services/notification/notification.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Container/Container.jsx","services/notification/notification.js","components/Searchbar/Searchbar.jsx","services/status.js","services/image-api.js","components/Loader/Loader.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","showNotification","message","toast","warn","notify","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","form","e","preventDefault","trim","button","type","Provider","value","reactIcons","label","input","name","autoComplete","autoFocus","placeholder","onChange","target","Status","apiServise","clientQuery","currentPage","url","fetch","then","response","json","Spinner","spinner","color","height","width","ImageGalleryItem","image","alt","id","item","src","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","overlay","onClick","currentTarget","modal","Button","page","ImageGallery","modalState","onToggleModal","query","setQuery","setPage","status","setStatus","modalImageSrc","setModalImageSrc","modalImageAlt","setModalImageAlt","setStatusRejected","hits","length","catch","error","scrollTo","top","documentElement","scrollHeight","behavior","list","nodeName","current","find","toString","largeImageURL","tags","map","webformatURL","App","showModal","setShowModal","queryValue","toLowerCase","autoClose","style","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9543a71a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ImageGallery_list__3PzUv\",\"image\":\"ImageGallery_image__2HH6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__1hc8Z\",\"image\":\"ImageGalleryItem_image__7Op_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2ryoB\",\"modal\":\"Modal_modal__1zVy7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__l3s1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notify\":\"notification_notify__wGmwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__1XlG1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__A3dno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Searchbar_container__2tboK\",\"form\":\"Searchbar_form__1rWFM\",\"button\":\"Searchbar_button__5gQ7x\",\"reactIcons\":\"Searchbar_reactIcons__3U9Z3\",\"label\":\"Searchbar_label__wS7we\",\"input\":\"Searchbar_input__g-WNT\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Container;","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './notification.module.css';\r\n\r\nconst clientErrorEmptyQuery =\r\n  'Incorrect query! Please enter your request in the correct form';\r\n\r\nconst clientErrorInvalidQuery =\r\n  'Sorry, the service cannot process your requestðŸ˜¨. Try again, please';\r\n\r\nconst serverError =\r\n  'Sorry, there are some technical problems ðŸ˜±ðŸ˜±ðŸ˜±. Please, try again later';\r\n\r\nconst showNotification = message => {\r\n  toast.warn(message, { className: `${s.notify}` });\r\n};\r\n\r\nexport {\r\n  clientErrorEmptyQuery,\r\n  clientErrorInvalidQuery,\r\n  serverError,\r\n  showNotification,\r\n};","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { IconContext } from 'react-icons';\r\nimport s from './Searchbar.module.css';\r\nimport {\r\n  clientErrorEmptyQuery,\r\n  showNotification,\r\n} from '../../services/notification/notification';\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleChangeForm = e => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (searchQuery.trim() === '') {\r\n      showNotification(clientErrorEmptyQuery);\r\n    }\r\n    onSubmit(searchQuery.trim());\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.container}>\r\n      <form className={s.form} onSubmit={handleSubmitForm}>\r\n        <button className={s.button} type=\"submit\">\r\n          <IconContext.Provider value={{ className: `${s.reactIcons}` }}>\r\n            <FiSearch />\r\n          </IconContext.Provider>\r\n        </button>\r\n\r\n        <label className={s.label}>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"searchQuery\"\r\n            value={searchQuery}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={handleChangeForm}\r\n          />\r\n        </label>\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;","const Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport { Status };","const apiServise = (clientQuery, currentPage) => {\r\n  const PUBLIC_URL = 'https://pixabay.com/api/';\r\n  const KEY = '19018418-5cf416ff9d3b144c810bafa25';\r\n  const url = `${PUBLIC_URL}?q=${clientQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return fetch(url).then(response => response.json());\r\n};\r\n\r\nexport { apiServise };","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './Loader.module.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={s.spinner}>\r\n      <Loader type=\"Circles\" color=\"#a6c0fe\" height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ image, alt, id }) => {\r\n  return (\r\n    <li className={s.item} id={id}>\r\n      <img className={s.image} src={image} alt={alt} id={id} />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#root-modal');\r\n\r\nconst Modal = ({ children, onClose }) => {\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.overlay} onClick={handleBackdropClick}>\r\n      <div className={s.modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ page, onClick }) => {\r\n  return (\r\n    <button\r\n      className={s.button}\r\n      type=\"button\"\r\n      onClick={() => {\r\n        onClick(page);\r\n      }}\r\n    >\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  page: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport {\r\n  clientErrorInvalidQuery,\r\n  serverError,\r\n  showNotification,\r\n} from '../../services/notification/notification';\r\nimport { Status } from '../../services/status';\r\nimport { apiServise } from '../../services/image-api';\r\nimport Spinner from '../Loader';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Modal from '../Modal';\r\nimport Button from '../Button';\r\n\r\nconst ImageGallery = ({\r\n  searchQuery,\r\n  currentPage,\r\n  modalState,\r\n  onToggleModal,\r\n}) => {\r\n  const [query, setQuery] = useState(null);\r\n  const [page, setPage] = useState(currentPage);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [modalImageSrc, setModalImageSrc] = useState(null);\r\n  const [modalImageAlt, setModalImageAlt] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n\r\n    setStatus(Status.PENDING);\r\n    setPage(currentPage);\r\n\r\n    const setStatusRejected = message => {\r\n      setStatus(Status.REJECTED);\r\n      showNotification(message);\r\n    };\r\n\r\n    const firstLoading = value => {\r\n      setQuery(value);\r\n      setPage(page => page + 1);\r\n      setStatus(Status.RESOLVED);\r\n    };\r\n\r\n    apiServise(searchQuery, currentPage)\r\n      .then(({ hits }) =>\r\n        hits.length === 0\r\n          ? setStatusRejected(clientErrorInvalidQuery)\r\n          : firstLoading(hits),\r\n      )\r\n      .catch(error => {\r\n        setStatusRejected(serverError);\r\n      });\r\n\r\n    return () => setStatus(Status.IDLE);\r\n  }, [currentPage, searchQuery]);\r\n\r\n  const openModal = e => {\r\n    if (e.target.nodeName === 'IMG') {\r\n      onToggleModal();\r\n      const current = query.find(({ id }) => id.toString() === e.target.id);\r\n      setModalImageSrc(current.largeImageURL);\r\n      setModalImageAlt(current.tags);\r\n    }\r\n  };\r\n\r\n  const loadMore = () => {\r\n    apiServise(searchQuery, page).then(({ hits }) => {\r\n      setQuery([...query, ...hits]);\r\n      setPage(page => page + 1);\r\n      setStatus(Status.RESOLVED);\r\n      scrollTo();\r\n    });\r\n  };\r\n\r\n  const scrollTo = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  if (status === Status.IDLE || status === Status.REJECTED) {\r\n    return <></>;\r\n  }\r\n  if (status === Status.PENDING) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (status === Status.RESOLVED) {\r\n    return (\r\n      <>\r\n        <ul className={s.list} onClick={openModal}>\r\n          {query.map(({ id, webformatURL, tags }) => (\r\n            <ImageGalleryItem\r\n              key={id}\r\n              image={webformatURL}\r\n              alt={tags}\r\n              id={id}\r\n            />\r\n          ))}\r\n        </ul>\r\n\r\n        {modalState && (\r\n          <Modal onClose={onToggleModal}>\r\n            <img className={s.image} src={modalImageSrc} alt={modalImageAlt} />\r\n          </Modal>\r\n        )}\r\n\r\n        <Button page={page} onClick={loadMore} />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  modalState: PropTypes.bool.isRequired,\r\n  onToggleModal: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import { useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Container from '../Container';\r\nimport SearchBar from '../Searchbar';\r\nimport ImageGallery from '../ImageGallery';\r\n\r\nconst App = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const hadleSubmit = queryValue => {\r\n    setSearchQuery(queryValue.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SearchBar onSubmit={hadleSubmit} />\r\n      <ImageGallery\r\n        searchQuery={searchQuery}\r\n        currentPage={currentPage}\r\n        modalState={showModal}\r\n        onToggleModal={() => setShowModal(!showModal)}\r\n      />\r\n      <ToastContainer autoClose={4500} style={{ width: '700px' }} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}